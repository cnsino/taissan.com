<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Linux (WSL) 子系统如何与Windows通信</title>
      <link href="/2023/02/26/1677410190.html"/>
      <url>/2023/02/26/1677410190.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-检查网络是否通畅"><a href="#1-检查网络是否通畅" class="headerlink" title="1. 检查网络是否通畅"></a>1. 检查网络是否通畅</h2><h3 id="1-1-通过ipconfig获得WSL的ip地址，如-172-28-30-1"><a href="#1-1-通过ipconfig获得WSL的ip地址，如-172-28-30-1" class="headerlink" title="1.1 通过ipconfig获得WSL的ip地址，如 172.28.30.1"></a>1.1 通过ipconfig获得WSL的ip地址，如 172.28.30.1</h3><h3 id="1-2-进入Linux子系统，ping上面这个地址"><a href="#1-2-进入Linux子系统，ping上面这个地址" class="headerlink" title="1.2 进入Linux子系统，ping上面这个地址"></a>1.2 进入Linux子系统，ping上面这个地址</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ping</span> <span class="token number">172.28</span>.30.1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="1-3-如果无法ping通-或使用过程中发现网络不通-，则可在Windows系统上通过powershell（管理员启动）运行如下命令，开启Linux-WSL-子系统访问Windows的防火墙"><a href="#1-3-如果无法ping通-或使用过程中发现网络不通-，则可在Windows系统上通过powershell（管理员启动）运行如下命令，开启Linux-WSL-子系统访问Windows的防火墙" class="headerlink" title="1.3 如果无法ping通(或使用过程中发现网络不通)，则可在Windows系统上通过powershell（管理员启动）运行如下命令，开启Linux (WSL) 子系统访问Windows的防火墙"></a>1.3 如果无法ping通(或使用过程中发现网络不通)，则可在Windows系统上通过powershell（管理员启动）运行如下命令，开启Linux (WSL) 子系统访问Windows的防火墙</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"><span class="token function">New-NetFirewallRule</span> <span class="token operator">-</span>DisplayName <span class="token string">"WSL"</span> <span class="token operator">-</span>Direction Inbound  <span class="token operator">-</span>InterfaceAlias <span class="token string">"vEthernet (WSL)"</span>  <span class="token operator">-</span>Action Allow<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-获取WSL自动配置的域名"><a href="#2-获取WSL自动配置的域名" class="headerlink" title="2. 获取WSL自动配置的域名"></a>2. 获取WSL自动配置的域名</h2><h3 id="方法1"><a href="#方法1" class="headerlink" title="方法1"></a>方法1</h3><ul><li>直接打开以下文件(可记事本打开或命令行查看)，寻找172.28.30.1对应的域名</li></ul><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">type C:\Windows\System32\drivers\etc\hosts.ics<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="方法2"><a href="#方法2" class="headerlink" title="方法2"></a>方法2</h3><ul><li>通过Linux子系统tracepath任意地址，如</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">tracepath baidu.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>则此时域名为命令执行结果中前两行出现的域名</li></ul><h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h3><ul><li>可以发现域名是 example.mshome.net 的形式，example一般为Windows及Linux子系统的主机名。比如，主机名为taissan，那么域名则是 taissan.mshome.net。</li></ul><h2 id="3-Linux子系统访问Windows上的服务"><a href="#3-Linux子系统访问Windows上的服务" class="headerlink" title="3. Linux子系统访问Windows上的服务"></a>3. Linux子系统访问Windows上的服务</h2><ul><li>Linux子系统访问Windows上的代理</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">export</span> <span class="token assign-left variable">https_proxy</span><span class="token operator">=</span>http://taissan.mshome.net:7890<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="4-Windows访问Linux子系统上的服务"><a href="#4-Windows访问Linux子系统上的服务" class="headerlink" title="4. Windows访问Linux子系统上的服务"></a>4. Windows访问Linux子系统上的服务</h2><ul><li>直接访问localhost+端口即可，如</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> http://127.0.0.1:8080<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="5-使用域名访问解决的问题"><a href="#5-使用域名访问解决的问题" class="headerlink" title="5. 使用域名访问解决的问题"></a>5. 使用域名访问解决的问题</h2><ul><li>配置域名访问后，后续无需再做配置。防止因电脑重启后wsl的IP变化，使得需要每次重新在Linux子系统中配置IP.</li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术百科 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wsl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Github访问Google</title>
      <link href="/2023/02/26/1677410182.html"/>
      <url>/2023/02/26/1677410182.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-任意仓库打开Codespaces"><a href="#1-任意仓库打开Codespaces" class="headerlink" title="1. 任意仓库打开Codespaces"></a>1. 任意仓库打开Codespaces</h2><h2 id="2-打开Codespaces的终端（页面类似于vscode）"><a href="#2-打开Codespaces的终端（页面类似于vscode）" class="headerlink" title="2. 打开Codespaces的终端（页面类似于vscode）"></a>2. 打开Codespaces的终端（页面类似于vscode）</h2><h2 id="3-运行如下命令"><a href="#3-运行如下命令" class="headerlink" title="3. 运行如下命令"></a>3. 运行如下命令</h2><h3 id="3-1-切换到root权限"><a href="#3-1-切换到root权限" class="headerlink" title="3.1 切换到root权限"></a>3.1 切换到root权限</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token parameter variable">-s</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="3-2-运行docker应用"><a href="#3-2-运行docker应用" class="headerlink" title="3.2 运行docker应用"></a>3.2 运行docker应用</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> run <span class="token parameter variable">-p</span> <span class="token number">6080</span>:80 <span class="token parameter variable">-v</span> /dev/shm:/dev/shm dorowu/ubuntu-desktop-lxde-vnc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="4-新窗口打开弹出的网页"><a href="#4-新窗口打开弹出的网页" class="headerlink" title="4. 新窗口打开弹出的网页"></a>4. 新窗口打开弹出的网页</h2><h2 id="5-在新的页面中打开firefox浏览器（其他浏览器貌似无法使用），即可使用"><a href="#5-在新的页面中打开firefox浏览器（其他浏览器貌似无法使用），即可使用" class="headerlink" title="5. 在新的页面中打开firefox浏览器（其他浏览器貌似无法使用），即可使用"></a>5. 在新的页面中打开firefox浏览器（其他浏览器貌似无法使用），即可使用</h2>]]></content>
      
      
      <categories>
          
          <category> 技术百科 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> google </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Trojan Source木马源攻击（CVE-2021-42694）</title>
      <link href="/2023/02/26/1677410067.html"/>
      <url>/2023/02/26/1677410067.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-RLO-LRI-‘ΓC«Γuª’-和-PDI-LRI-‘Γu⌐Γuª’-使用"><a href="#1-RLO-LRI-‘ΓC«Γuª’-和-PDI-LRI-‘Γu⌐Γuª’-使用" class="headerlink" title="1. RLO LRI(‘ΓÇ«Γüª’) 和 PDI LRI(‘Γü⌐Γüª’) 使用"></a>1. RLO LRI(‘ΓÇ«Γüª’) 和 PDI LRI(‘Γü⌐Γüª’) 使用</h2><h3 id="1-1-使用DOS-CP437-编码"><a href="#1-1-使用DOS-CP437-编码" class="headerlink" title="1.1 使用DOS(CP437)编码"></a>1.1 使用DOS(CP437)编码</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">access_level <span class="token operator">=</span> <span class="token string">"user"</span><span class="token keyword">if</span> access_level <span class="token operator">!=</span> <span class="token string">'noneΓÇ«Γüª'</span><span class="token punctuation">:</span> <span class="token comment"># Check if admin Γü⌐Γüª' and access_level != 'user</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"You are an admin."</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-2-使用utf-8-编码转换后（vscode：-Reopen-with-Encoding）"><a href="#1-2-使用utf-8-编码转换后（vscode：-Reopen-with-Encoding）" class="headerlink" title="1.2 使用utf-8 编码转换后（vscode： Reopen with Encoding）"></a>1.2 使用utf-8 编码转换后（vscode： Reopen with Encoding）</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">access_level <span class="token operator">=</span> <span class="token string">"user"</span><span class="token keyword">if</span> access_level <span class="token operator">!=</span> <span class="token string">'none‮⁦'</span><span class="token punctuation">:</span> <span class="token comment"># Check if admin ⁩⁦' and access_level != 'user</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"You are an admin."</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-RLI使用-‘Γuº’"><a href="#2-RLI使用-‘Γuº’" class="headerlink" title="2. RLI使用(‘Γüº’)"></a>2. RLI使用(‘Γüº’)</h2><h3 id="2-1-使用DOS-CP437-编码"><a href="#2-1-使用DOS-CP437-编码" class="headerlink" title="2.1 使用DOS(CP437)编码"></a>2.1 使用DOS(CP437)编码</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">bank <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token string">'alice'</span><span class="token punctuation">:</span> <span class="token number">100</span> <span class="token punctuation">&#125;</span><span class="token keyword">def</span> <span class="token function">subtract_funds</span><span class="token punctuation">(</span>account<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> amount<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">''' Subtract funds from bank account then Γüº'''</span> <span class="token punctuation">;</span><span class="token keyword">return</span>    bank<span class="token punctuation">[</span>account<span class="token punctuation">]</span> <span class="token operator">-=</span> amount    <span class="token keyword">return</span>subtract_funds<span class="token punctuation">(</span><span class="token string">'alice'</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>bank<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-2-使用utf-8-编码转换后"><a href="#2-2-使用utf-8-编码转换后" class="headerlink" title="2.2 使用utf-8 编码转换后"></a>2.2 使用utf-8 编码转换后</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">bank <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token string">'alice'</span><span class="token punctuation">:</span> <span class="token number">100</span> <span class="token punctuation">&#125;</span><span class="token keyword">def</span> <span class="token function">subtract_funds</span><span class="token punctuation">(</span>account<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> amount<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">''' Subtract funds from bank account then ⁧'''</span> <span class="token punctuation">;</span><span class="token keyword">return</span>    bank<span class="token punctuation">[</span>account<span class="token punctuation">]</span> <span class="token operator">-=</span> amount    <span class="token keyword">return</span>subtract_funds<span class="token punctuation">(</span><span class="token string">'alice'</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>bank<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-‘╨¥’-西里尔字母H-使用"><a href="#3-‘╨¥’-西里尔字母H-使用" class="headerlink" title="3. ‘╨¥’(西里尔字母H)使用"></a>3. ‘╨¥’(西里尔字母H)使用</h2><h3 id="3-1-使用DOS-CP437-编码"><a href="#3-1-使用DOS-CP437-编码" class="headerlink" title="3.1 使用DOS(CP437)编码"></a>3.1 使用DOS(CP437)编码</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> say╨¥ello<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Goodbye, World!"</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Hello, World!"</span><span class="token punctuation">)</span>say╨¥ello<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-2-使用utf-8-编码转换后-╨¥-变为类似H的字符"><a href="#3-2-使用utf-8-编码转换后-╨¥-变为类似H的字符" class="headerlink" title="3.2 使用utf-8 编码转换后 ╨¥ 变为类似H的字符"></a>3.2 使用utf-8 编码转换后 ╨¥ 变为类似H的字符</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> sayНello<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Goodbye, World!"</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Hello, World!"</span><span class="token punctuation">)</span>sayНello<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><div class="table-container"><table><thead><tr><th>Abbreviation</th><th>Code Point</th><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>LRE</td><td>U+202A</td><td>Left-to-Right Embedding</td><td>尝试将以下文本视为从左到右</td></tr><tr><td>RLE</td><td>U+202B</td><td>Right-to-Left Embedding</td><td>尝试将以下文本视为从右到左</td></tr><tr><td>LRO</td><td>U+202D</td><td>Left-to-Right Override</td><td>强制将以下文本视为从左到右</td></tr><tr><td>RLO</td><td>U+202E</td><td>Right-to-Left Override</td><td>强制将以下文本视为从右到左</td></tr><tr><td>LRI</td><td>U+2066</td><td>Left-to-Right Isolate</td><td>强制将后续文本视为从左到右，而不影响相邻文本</td></tr><tr><td>RLI</td><td>U+2067</td><td>Right-to-Left Isolate</td><td>强制将后续文本视为从右到左，而不影响相邻文本</td></tr><tr><td>FSI</td><td>U+2068</td><td>First Strong Isolate</td><td>强制按照下一个字符指示的方向处理后续文本</td></tr><tr><td>PDF</td><td>U+202C</td><td>Pop Directional Formatting</td><td>终止最近的 LRE.RLE.LRO 或 RLO</td></tr><tr><td>PDI</td><td>U+2069</td><td>Pop Directional Isolate</td><td>终止最近的 LRI 或 RLI</td></tr></tbody></table></div><p><a href="https://trojansource.codes/trojan-source.pdf">trojan-source论文</a></p>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cve </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pip 离线安装第三方库及依赖</title>
      <link href="/2023/02/26/1677407864.html"/>
      <url>/2023/02/26/1677407864.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-已安装的模块名称导出到文件"><a href="#1-已安装的模块名称导出到文件" class="headerlink" title="1. 已安装的模块名称导出到文件"></a>1. 已安装的模块名称导出到文件</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip freeze <span class="token operator">></span>requirements.txt <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-在线下载依赖"><a href="#2-在线下载依赖" class="headerlink" title="2. 在线下载依赖"></a>2. 在线下载依赖</h2><h3 id="2-1-直接下载对应包"><a href="#2-1-直接下载对应包" class="headerlink" title="2.1 直接下载对应包"></a>2.1 直接下载对应包</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip download <span class="token parameter variable">-d</span> D:<span class="token punctuation">\</span>python<span class="token punctuation">\</span>pip<span class="token punctuation">\</span>package mitmproxy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-2-通过requirements-txt直接下载对应包"><a href="#2-2-通过requirements-txt直接下载对应包" class="headerlink" title="2.2 通过requirements.txt直接下载对应包"></a>2.2 通过requirements.txt直接下载对应包</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip download <span class="token parameter variable">-d</span> D:<span class="token punctuation">\</span>python<span class="token punctuation">\</span>pip<span class="token punctuation">\</span>package <span class="token parameter variable">-r</span> requirements.txt <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3-在离线电脑上安装已导出的模块，指定模块名称或指定包含所有模块列表的文件"><a href="#3-在离线电脑上安装已导出的模块，指定模块名称或指定包含所有模块列表的文件" class="headerlink" title="3. 在离线电脑上安装已导出的模块，指定模块名称或指定包含所有模块列表的文件"></a>3. 在离线电脑上安装已导出的模块，指定模块名称或指定包含所有模块列表的文件</h2><h3 id="3-1-直接安装对应包"><a href="#3-1-直接安装对应包" class="headerlink" title="3.1 直接安装对应包"></a>3.1 直接安装对应包</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> --no-index --find-links<span class="token operator">=</span>E:<span class="token punctuation">\</span>python<span class="token punctuation">\</span>mitmproxy <span class="token parameter variable">-r</span> requirements<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="3-2-通过requirements-txt直接安装对应包"><a href="#3-2-通过requirements-txt直接安装对应包" class="headerlink" title="3.2 通过requirements.txt直接安装对应包"></a>3.2 通过requirements.txt直接安装对应包</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> --no-index --find-links<span class="token operator">=</span>E:<span class="token punctuation">\</span>python<span class="token punctuation">\</span>mitmproxy mitmproxy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 技术百科 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
